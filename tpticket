import pickle
import os
import random

# Nombre del archivo para guardar los tickets
TICKETS_FILE = "tickets.pkl"

# Función para cargar los tickets desde el archivo
def cargar_tickets():
    if os.path.isfile(TICKETS_FILE):
        with open(TICKETS_FILE, "rb") as f:
            return pickle.load(f)
    return {}

# Función para guardar los tickets en el archivo
def guardar_tickets(tickets):
    with open(TICKETS_FILE, "wb") as f:
        pickle.dump(tickets, f)

# Menú principal
def menu_principal():
    while True:
        os.system("cls" if os.name == "nt" else "clear")
        print("Hola bienvenido al sistema de Tickets PiperPC")
        print("1 - Generar un Nuevo Ticket")
        print("2 - Leer un Ticket")
        print("3 - Salir")
        opcion = input("Seleccione: ")

        if opcion == "1":
            generar_ticket()
        elif opcion == "2":
            leer_ticket()
        elif opcion == "3":
            salir_programa()
        else:
            print("Opción no válida. Intente de nuevo.")

# Función para generar un nuevo ticket
def generar_ticket():
    tickets = cargar_tickets()
    while True:
        os.system("cls" if os.name == "nt" else "clear")
        print("Ingrese los datos para Generar un nuevo Ticket")
        nombre = input("Ingrese su Nombre: ")
        sector = input("Ingrese su Sector: ")
        asunto = input("Ingrese Asunto: ")
        mensaje = input("Ingrese un Mensaje: ")

        numero_ticket = random.randint(1000, 9999)
        tickets[numero_ticket] = {
            "Nombre": nombre,
            "Sector": sector,
            "Asunto": asunto,
            "Mensaje": mensaje
        }
        guardar_tickets(tickets)

        print("\n========================================")
        print("       Se generó el siguiente Ticket")
        print("========================================")
        print(f"Su nombre: {nombre}       N°Ticket: {numero_ticket}")
        print(f"Sector: {sector}")
        print(f"Asunto: {asunto}")
        print(f"\nMensaje: {mensaje}")
        print("\nRecuerde su número de Ticket\n")

        otro = input("¿Desea generar un nuevo Ticket? (s/n): ").strip().lower()
        if otro != "s":
            break

# Función para leer un ticket existente
def leer_ticket():
    tickets = cargar_tickets()
    while True:
        os.system("cls" if os.name == "nt" else "clear")
        numero_ticket = input("Ingrese el número del Ticket que desea leer: ")

        if numero_ticket.isdigit():
            numero_ticket = int(numero_ticket)
            if numero_ticket in tickets:
                ticket = tickets[numero_ticket]
                print("\n========================================")
                print(f"       Ticket N° {numero_ticket}")
                print("========================================")
                print(f"Nombre: {ticket['Nombre']}")
                print(f"Sector: {ticket['Sector']}")
                print(f"Asunto: {ticket['Asunto']}")
                print(f"\nMensaje: {ticket['Mensaje']}\n")
            else:
                print("El número de ticket no existe.")
        else:
            print("Entrada no válida. Ingrese un número de ticket.")

        otro = input("¿Desea leer otro Ticket? (s/n): ").strip().lower()
        if otro != "s":
            break

# Función para salir del programa
def salir_programa():
    confirmar = input("¿Está seguro de que desea salir? (s/n): ").strip().lower()
    if confirmar == "s":
        print("Gracias por usar el sistema de tickets.")
        exit()

# Inicio del programa
if __name__ == "__main__":
    menu_principal()